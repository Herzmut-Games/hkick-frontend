{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Score.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n\n  const channel = \"GoalNotificationsChannel\";\n  const host = \"127.0.0.1\";\n  const sub_msg = {\n    command: \"subscribe\",\n    identifier: JSON.stringify({\n      channel\n    })\n  };\n\n  const score = {\n    red: 0,\n    white: 0\n  };\n\n  onMount(async () => {\n    let socket = new WebSocket(`ws://${host}:3000/cable`);\n\n    socket.onopen = e => {\n      console.log(\"[open] Connection established\");\n      console.log(\"Subscribing to channel:\", channel);\n      socket.send(JSON.stringify(sub_msg));\n    };\n\n    socket.onmessage = e => {\n      const data = JSON.parse(e.data);\n      let channel;\n      let type;\n\n      if (data.identifier) {\n        channel = JSON.parse(data.identifier).channel;\n      }\n\n      if (data.type) {\n        type = data.type;\n      }\n\n      if (channel) {\n        switch (channel) {\n          case \"GoalNotificationsChannel\":\n            if (type === \"confirm_subscription\") {\n              console.log(\"Successfully subscribed to channel:\", channel);\n            }\n            if (data.message) {\n              console.log(data.message.team);\n              switch (data.message.team) {\n                case \"red\":\n                  score.red += 1;\n                  break;\n                case \"white\":\n                  score.white += 1;\n                  break;\n              }\n            }\n        }\n      }\n    };\n\n    socket.onclose = e => {\n      if (e.wasClean) {\n        console.log(\n          `[close] Connection closed cleanly, code=${e.code} reason=${e.reason}`\n        );\n      } else {\n        console.log(\"[close] Connection died\");\n      }\n    };\n\n    socket.onerror = function(error) {\n      console.log(`[error] ${error.message}`);\n    };\n  });\n</script>\n\n<style>\n  .score-display {\n    display: flex;\n    width: 100%;\n    height: 80%;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .score-display__score {\n    font-size: 18rem;\n  }\n\n  .score-display__divider {\n    font-size: 8rem;\n  }\n</style>\n\n<div class=\"score-display\">\n  <div class=\"score-display__score\">{score.red}</div>\n  <span class=\"score-display__divider\">:</span>\n  <div class=\"score-display__score\">{score.white}</div>\n</div>\n\n<!-- {#each photos as photo}\n  <figure>\n    <img src={photo.thumbnailUrl} alt={photo.title} />\n    <figcaption>{photo.title}</figcaption>\n  </figure>\n{:else}\n  <p>loading...</p>\n{/each} -->\n"
  ],
  "names": [],
  "mappings": "AA6EE,cAAc,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,cAAc,CAAE,GAAG,CACnB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,qBAAqB,cAAC,CAAC,AACrB,SAAS,CAAE,KAAK,AAClB,CAAC,AAED,uBAAuB,cAAC,CAAC,AACvB,SAAS,CAAE,IAAI,AACjB,CAAC"
}